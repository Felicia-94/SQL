#This project utilizes the following Superstore data: 

CREATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);

#For this project, I used SQL to query the Superstore database to get information about items sold at the store and their prices. 

#Here I use a SELECT statement to order the items by price in ascending order.
SELECT *
FROM superstore
ORDER BY price asc;

#Here I showed statistics about prices such as sum, average, minimum, maximum, and count.
SELECT SUM(price) AS Sum_Price, category
FROM superstore
GROUP BY category;

SELECT AVG(price) AS Average_price, category
FROM superstore
GROUP BY category;

SELECT MIN(price) AS Minimum_price, category
FROM superstore
GROUP BY category;

SELECT MAX(price) AS Maximum_price, category
FROM superstore
GROUP BY category;

SELECT COUNT(price)
FROM superstore;

SELECT COUNT (stock_quantity) AS Quantity_in_stock, category
FROM superstore
GROUP BY category;

#Here I showed statistics about the price for items in the category of "Kitchen Supplies". 
SELECT SUM(price) AS Sum_price_kitchen_supplies
FROM superstore
WHERE category = 'Kitchen Supplies';

SELECT AVG(price) AS Average_price_kitchen_supplies
FROM superstore
WHERE category="Kitchen Supplies";

#Here I showed how many air purifiers are currently in stock.
SELECT SUM(stock_quantity) AS air_purifiers_in_stock
FROM superstore
WHERE category = 'Appliances' AND item_name = 'Air Purifier';
